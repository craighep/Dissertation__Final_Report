\addvspace {10\p@ }
\contentsline {figure}{\numberline {1.1}{\ignorespaces Image of the initial user stories after the first meeting, short and concise requirements.\relax }}{2}
\contentsline {figure}{\numberline {1.2}{\ignorespaces Use-case of grouped requirements from initial research\relax }}{6}
\addvspace {10\p@ }
\contentsline {figure}{\numberline {2.1}{\ignorespaces Model View Controller diagram for my proposed application. Shows the planned interactions between different subjects within my application.\relax }}{11}
\contentsline {figure}{\numberline {2.2}{\ignorespaces Module diagram displaying the various communications between modules, and how they are connected to the GUI in the MVC way.\relax }}{14}
\contentsline {figure}{\numberline {2.3}{\ignorespaces Use-case diagram detailing user options, the canvas and OLAN input.\relax }}{19}
\contentsline {figure}{\numberline {2.4}{\ignorespaces Flow chart showing how the application should run in accordance to loading up and then allowing the user to begin using various functions.\relax }}{20}
\contentsline {figure}{\numberline {2.5}{\ignorespaces Wire-frame design detailing desktop view of the application, including the open menu for the 'off canvas feature'.\relax }}{21}
\contentsline {figure}{\numberline {2.6}{\ignorespaces Wire-frame design detailing mobile view of application with navigation bar in minified version.\relax }}{21}
\addvspace {10\p@ }
\contentsline {figure}{\numberline {3.1}{\ignorespaces Screenshot of GUI created with Foundation, JQyery and HTML markup.\relax }}{26}
\contentsline {figure}{\numberline {3.2}{\ignorespaces Model of plane loaded up using JSON and three.js object loader. This plane will represent the on-board camera, and fill be the object that will be assigned locations along an OLAN path to show flying the flight plans entered by users.\relax }}{30}
\contentsline {figure}{\numberline {3.3}{\ignorespaces Figure illustrating that where the vector is turning right to complete the diagonal line up, it is becoming flat with the X axis rather than curving to the correct angle.\relax }}{31}
\contentsline {figure}{\numberline {3.4}{\ignorespaces Movie reel overlaying the bottom of the canvas, with some figures loaded after the user typed in a string of OLAN.\relax }}{36}
\contentsline {figure}{\numberline {3.5}{\ignorespaces Burn-down chart of features implemented and tested fully. X axis represents number of features to implement, whilst Y axis shows the date that the features have been implemented by.\relax }}{39}
\contentsline {figure}{\numberline {3.6}{\ignorespaces Feature progress reports for each of the feature sets implemented up to this point in time. The predicted month of completion is shown at the bottom, and tasks where they are not complete and tested fully are ones without a green background.\relax }}{40}
\contentsline {figure}{\numberline {3.7}{\ignorespaces Latest Travis build after a commit, running all the Jasmine tests in the application.\relax }}{41}
\contentsline {figure}{\numberline {3.8}{\ignorespaces Frame-rate counter shown in bottom right of the application.\relax }}{42}
\contentsline {figure}{\numberline {3.9}{\ignorespaces Average rate per device(Graphics RAM in brackets)\relax }}{42}
\contentsline {figure}{\numberline {3.10}{\ignorespaces Average frame rate per browser (all latest versions of browser on 04/05/2015)\relax }}{42}
\addvspace {10\p@ }
\addvspace {10\p@ }
\contentsline {figure}{\numberline {A.1}{\ignorespaces Initial gantt chart, outline times throughout project activities, to be updated as time passes during the project span.\relax }}{51}
\contentsline {figure}{\numberline {A.2}{\ignorespaces Requirements brief created before a meeting to clarify questions on the initial requirements. The pdf continues onto the next page.\relax }}{52}
\contentsline {figure}{\numberline {A.3}{\ignorespaces A document created before a second meeting, outlining my current undertsanding of the OLAN language, and how manoeuvres can be constructed from smaller single-element ones.\relax }}{55}
\contentsline {figure}{\numberline {A.4}{\ignorespaces More detailed Gantt chart, focuses on the implimentation and testing stratedgy of each feature. As you can see, prioritised tasks are the first to be completed.\relax }}{61}
\addvspace {10\p@ }
\addvspace {10\p@ }
\contentsline {figure}{\numberline {C.1}{\ignorespaces HTML code showing the page is divided into two, one for the canvas, and one for the menu. The 'off-canvas-list' has sub menus that allow more menus to be hidden to the left.\relax }}{64}
\contentsline {figure}{\numberline {C.2}{\ignorespaces JSON code showing a vertical upline defined by JSON instructions.\relax }}{65}
\contentsline {figure}{\numberline {C.3}{\ignorespaces Snippet of code showing how RequireJS starts the application. The RequireJS library is loaded onto the page, the configuration telling the library the base of the application JavaScript files is set, and then is told to start by running the main.js file.\relax }}{65}
\contentsline {figure}{\numberline {C.4}{\ignorespaces Snippet of code responsible for converting the manoeuvre objects into vectors, allowing the creation of Three.js spline curves.\relax }}{66}
\contentsline {figure}{\numberline {C.5}{\ignorespaces Code used for checking local storage compatibility.\relax }}{66}
\addvspace {10\p@ }
\contentsline {figure}{\numberline {D.1}{\ignorespaces RequireJS module for allowing test units to share methods providing them with GUI elements before tests. Tear down code removes the elements after each test.\relax }}{68}
\contentsline {figure}{\numberline {D.2}{\ignorespaces JSUnit code created to test the capabilites of changing the JSON instructions into objects.\relax }}{68}
\contentsline {figure}{\numberline {D.3}{\ignorespaces Checks if objects for both are created at runtime of the application.\relax }}{68}
\contentsline {figure}{\numberline {D.4}{\ignorespaces Unit code checking information is set correctly, and if it can be changed at stored for various animation properties.\relax }}{68}
\contentsline {figure}{\numberline {D.5}{\ignorespaces JSUnit code for checking flight paths export correctly to JSON and local storage, and check importing back works.\relax }}{69}
\contentsline {figure}{\numberline {D.6}{\ignorespaces A google forms questionnaire created to allow users to give feedback about the application.\relax }}{72}
\contentsline {figure}{\numberline {D.7}{\ignorespaces Statistics from the questionnaire results, showing percentages of answers and comments/ suggestions.\relax }}{74}
